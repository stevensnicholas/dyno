name: Deploy Demo Server
on:
  push:
    branches:
      - main
jobs:
  demoserver:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./demo_server
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          mask-aws-account-id: false
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Get branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: branch
      - name: Build, tag, and push image to Amazon ECR
        id: tag
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: docker build -t demo_server .
        working-directory: ./demo_server
      - name: Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: ./demo_server/terraform
        run: |
          printf "terraform {\n  backend \"s3\" {}\n}" > state.tf
          terraform init \
            -backend-config="bucket=${{ secrets.TERRAFORM_STATE_S3_BUCKET }}" \
            -backend-config="key=${{ steps.branch.outputs.branch }}_demo_server" \
            -backend-config="region=${{ secrets.AWS_DEFAULT_REGION }}" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${{ secrets.TERRAFORM_LOCK_DYNAMODB_TABLE_DEMOSERVER }}"
          terraform apply -auto-approve \
            -var="deployment_id=${{ steps.branch.outputs.branch }}" \
            -var="demo_server_tag=demo_server";
